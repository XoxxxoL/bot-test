from aiogram import types, Dispatcher
from aiogram.dispatcher import FSMContext

import re
import pathlib
from PIL import Image

from db.queries.users import change_close_profile_user, change_user_name, \
    get_user_close_profile, get_user_profile

from keyboards.inline.main_callback import profile_callback
from keyboards.inline.main_inline import settings_keyboard
from misc.states.settings_states import SettingsState


async def settings_main(call: types.CallbackQuery):
    db_session = call.message.bot.get('db')
    user = await get_user_close_profile(db_session, call.from_user.id)

    close_text = 'üîì –ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —Ç–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å –∑–∞–∫—Ä—ã—Ç –∏ –µ–≥–æ –º–æ–≥—É—Ç –≤–∏–¥–µ—Ç—å —Ç–æ–ª—å–∫–æ –í–ò–ü –∏–≥—Ä–æ–∫–∏'
    open_text = 'üîì –ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —Ç–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å –æ—Ç–∫—Ä—ã—Ç –∏ –µ–≥–æ –º–æ–≥—É—Ç –≤–∏–¥–µ—Ç—å –≤—Å–µ –∏–≥—Ä–æ–∫–∏'

    await call.message.answer('‚öôÔ∏è <strong>–ù–∞—Å—Ç—Ä–æ–π–∫–∏</strong>\n\n'
                              f'{close_text if user else open_text}',
                              reply_markup=await settings_keyboard(user))


async def close_profile(call: types.CallbackQuery):
    db_session = call.message.bot.get('db')

    await call.answer()
    await change_close_profile_user(db_session, call.from_user.id, True)
    await call.message.edit_text('‚öôÔ∏è <strong>–ù–∞—Å—Ç—Ä–æ–π–∫–∏</strong>\n\n'
                                 'üîì –ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —Ç–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å –∑–∞–∫—Ä—ã—Ç –∏ –µ–≥–æ –º–æ–≥—É—Ç –≤–∏–¥–µ—Ç—å —Ç–æ–ª—å–∫–æ –í–ò–ü –∏–≥—Ä–æ–∫–∏',
                                 reply_markup=await settings_keyboard(True))


async def open_profile(call: types.CallbackQuery):
    db_session = call.message.bot.get('db')

    await call.answer()
    await change_close_profile_user(db_session, call.from_user.id, False)
    await call.message.edit_text('‚öôÔ∏è <strong>–ù–∞—Å—Ç—Ä–æ–π–∫–∏</strong>\n\n'
                                 'üîì –ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —Ç–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å –æ—Ç–∫—Ä—ã—Ç –∏ –µ–≥–æ –º–æ–≥—É—Ç –≤–∏–¥–µ—Ç—å –≤—Å–µ –∏–≥—Ä–æ–∫–∏',
                                 reply_markup=await settings_keyboard(False))


async def change_name(call: types.CallbackQuery):
    await call.message.answer('–ü—Ä–∏—à–ª–∏ –º–Ω–µ –Ω–æ–≤–æ–µ –∏–º—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞\n'
                              '–ò–º—è –¥–æ–ª–∂–Ω–æ —Å–æ—Å—Ç–æ—è—Ç—å —Ç–æ–ª—å–∫–æ –∏–∑ –±—É–∫–≤ —Ä—É—Å—Å–∫–æ–≥–æ –∏–ª–∏ –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ –∞–ª—Ñ–∞–≤–∏—Ç–∞. –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–Ω–∞ - 15 —Å–∏–º–≤–æ–ª–æ–≤ | –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è - 5\n'
                              '–ò–ª–∏ –ø—Ä–∏—à–ª–∏ –º–Ω–µ 0 –¥–ª—è –æ—Ç–º–µ–Ω—ã')
    await SettingsState.ChangeUserName.set()


async def get_new_user_name(message: types.Message, state: FSMContext):
    if message.text == '0':
        await message.answer('–û—Ç–º–µ–Ω–∞')
        await state.finish()
        return

    db_session = message.bot.get('db')
    new_name = message.text.strip()
    new_name = ''.join(re.findall(r'[–ê-—èA-z\s]', new_name))

    if not new_name.isalpha() or len(new_name) > 15 or len(new_name) < 5:
        await message.answer('–¢—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–µ —Å–∏–º–≤–æ–ª—ã –≤ –∏–º–µ–Ω–∏ –∏–ª–∏ –æ–Ω–æ –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç –ø–æ –¥–ª–∏–Ω–Ω–µ\n'
                             '–ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª-–≤–æ —Å–∏–º–≤–æ–ª–æ–≤ 5, –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ 15\n'
                             '–ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑ –∏–ª–∏ –ø—Ä–∏—à–ª–∏ –º–Ω–µ 0 –¥–ª—è –æ—Ç–º–µ–Ω—ã')
        return
    await change_user_name(db_session, message.from_user.id, new_name)
    await message.answer(f'–¢—ã –∏–∑–º–µ–Ω–∏–ª –∏–º—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –Ω–∞ {new_name}')
    await state.finish()


async def change_profile_image(call: types.CallbackQuery):
    db_session = call.message.bot.get('db')

    user = await get_user_profile(db_session, call.from_user.id)
    user = user[0]

    if not user.custom_image:
        await call.answer('–¢–µ–±–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è')
        return

    await call.answer()
    await call.message.answer('–ü—Ä–∏—à–ª–∏ –º–Ω–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–æ–º 800—Ö500 –∏–ª–∏ 0 –¥–ª—è –æ—Ç–º–µ–Ω—ã')
    await SettingsState.GetUserImage.set()


async def get_custom_image(message: types.Message, state: FSMContext):
    await message.photo[-1].download(f'{pathlib.Path().absolute()}/image/profile/{message.from_user.id}.png')
    im = Image.open(f'{pathlib.Path().absolute()}/image/profile/{message.from_user.id}.png')
    w, h = im.size
    if w < 700 or w > 900 or h < 400 or h > 600:
        await message.answer('–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç –ø–æ —Ä–∞–∑–º–µ—Ä—É\n'
                             '–†–∞–∑–º–µ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å 800—Ö500\n'
                             '–î–ª—è –æ—Ç–º–µ–Ω—ã –ø—Ä–∏—à–ª–∏ –Ω–µ 0')
        pathlib.Path(f'{pathlib.Path().absolute()}/image/profile/{message.from_user.id}.png').unlink()
    else:
        await message.answer('–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ')
        await state.finish()


async def cancel_user_photo(message: types.Message, state: FSMContext):
    if message.text == '0':
        await state.finish()
        await message.answer('–û—Ç–º–µ–Ω–∞')
    else:
        await message.answer('–ü—Ä–∏—à–ª–∏ –º–Ω–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–æ–º 800—Ö500 –∏–ª–∏ 0 –¥–ª—è –æ—Ç–º–µ–Ω—ã')


def register_settings_handler(dp: Dispatcher):
    dp.register_callback_query_handler(settings_main, profile_callback.filter(event='settings'), chat_type='private')
    dp.register_callback_query_handler(close_profile, profile_callback.filter(event='close_profile'),
                                       chat_type='private')
    dp.register_callback_query_handler(open_profile, profile_callback.filter(event='open_profile'), chat_type='private')
    # --------------------------------------------- CHANGE NAME -------------------------------------------------------#
    dp.register_callback_query_handler(change_name, profile_callback.filter(event='change_name'), chat_type='private')
    dp.register_message_handler(get_new_user_name, state=SettingsState.ChangeUserName, chat_type='private')
    # --------------------------------------------- CHANGE IMAGE -------------------------------------------------------#
    dp.register_callback_query_handler(change_profile_image, profile_callback.filter(event='change_photo'),
                                       chat_type='private')
    dp.register_message_handler(get_custom_image, state=SettingsState.GetUserImage,
                                content_types=types.ContentTypes.PHOTO,
                                chat_type='private')
    dp.register_message_handler(cancel_user_photo, state=SettingsState.GetUserImage, chat_type='private')
